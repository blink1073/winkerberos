name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The new version to set"
      post_version:
        description: "The post (dev) version to set"
      dry_run:
        description: "Dry Run?"
        default: false
        type: boolean

jobs:
  bump-and-tag:
    environment: release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: ./.github/actions/setup
        with:
          aws_role_arn: ${{ secrets.AWS_ROLE_ARN }}
          aws_region_name: ${{ vars.AWS_REGION_NAME }}
          aws_secret_id: ${{ secrets.AWS_SECRET_ID }}
      - name: Set new version
        shell: bash
        run: |
          export CURRENT_VERSION=$(python setup.py --version)
          export NEW_VERSION=${{ inputs.version }}
          sed -i "s/version = \"${CURRENT_VERSION}\"/version = \"${NEW_VERSION}\"/" pyproject.toml
      - name: Commit the version bump
        uses: ./.github/actions/git-sign
        with:
          command: "git commit -a -m \"BUMP ${{ inputs.version }}\" -s --gpg-sign=${GPG_KEY_ID}"
      - name: Tag the version
        uses: ./.github/actions/git-sign
        with:
          command: "git tag -a \"${{ inputs.version }}\" -m \"BUMP ${{ inputs.version }}\" -s --local-user=${GPG_KEY_ID}"
      - name: Verify the tag
        shell: bash
        run: |
          curl $GPG_PUBLIC_URL --output /tmp/signature.pub
          gpg --import /tmp/signature.pub
          git verify-tag ${{inputs.version}}
      - name: Push the commit and tag to the source branch
        shell: bash
        run: |
          if [ ${{ inputs.dry_run }} != "true" ]; then
            git push origin
            git push origin --tags
          fi

  build-dist:
    needs: [bump-and-tag]
    uses: ./.github/workflows/dist.yml

  publish-and-bump:
    needs: [build-dist]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: ./.github/actions/setup
        with:
          aws_role_arn: ${{ secrets.AWS_ROLE_ARN }}
          aws_region_name: ${{ vars.AWS_REGION_NAME }}
          aws_secret_id: ${{ secrets.AWS_SECRET_ID }}
      - uses: ./.github/actions/publish
        with:
          version: ${{ inputs.version }}
          product_name: winkerberos
          aws_bucket_name: ${{ secrets.AWS_BUCKET_NAME }}
          token: ${{ github.token }}
          dry_run: ${{ inputs.dry_run }}
      - name: Set post version
        shell: bash
        run: |
          git clean -dffx
          export CURRENT_VERSION=$(python setup.py --version)
          export NEW_VERSION=${{ inputs.post_version }}
          sed -i "s/version = \"${CURRENT_VERSION}\"/version = \"${NEW_VERSION}\"/" pyproject.toml
      - name: Commit the version bump
        uses: ./.github/actions/git-sign
        with:
          command: "git commit -a -m \"BUMP ${{ inputs.post_version }}\" -s --gpg-sign=${GPG_KEY_ID}"
      - name: Push the commit to the source branch
        shell: bash
        run: |
          if [ ${{ inputs.dry_run }} != "true" ]; then
            git push origin --tags
          fi
