name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The new version to set"
      post_version:
        description: "The post (dev) version to set"
      dry_run:
        description: "Dry Run?"
        default: false
        type: boolean

jobs:
  bump-and-tag:
    environment: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Set new version
        shell: bash
        run: |
          export CURRENT_VERSION=$(python setup.py --version)
          export NEW_VERSION=${{ inputs.version }}
          sed -i "s/version = \"${CURRENT_VERSION}\"/version = \"${NEW_VERSION}\"/" pyproject.toml
      - uses: ./.github/actions/commit
        with:
          version: ${{ inputs.version }}
          garasign_username: ${{ secrets.GRS_CONFIG_USER1_USERNAME }}
          garasign_password: ${{ secrets.GRS_CONFIG_USER1_PASSWORD }}
          artifactory_username: ${{ secrets.ARTIFACTORY_USER }}
          artifactory_password: ${{ secrets.ARTIFACTORY_PASSWORD }}
          gpg_key_id: ${{ vars.GPG_KEY_ID }}
          dry_run: ${{ inputs.dry_run }}
      - uses: ./.github/actions/tag
        with:
          version: ${{ inputs.version }}
          garasign_username: ${{ secrets.GRS_CONFIG_USER1_USERNAME }}
          garasign_password: ${{ secrets.GRS_CONFIG_USER1_PASSWORD }}
          artifactory_username: ${{ secrets.ARTIFACTORY_USER }}
          artifactory_password: ${{ secrets.ARTIFACTORY_PASSWORD }}
          gpg_key_id: ${{ vars.GPG_KEY_ID }}
          dry_run: ${{ inputs.dry_run }}

  build-dist:
    needs: [bump-and-tag]
    uses: ./.github/workflows/dist.yml

  publish-and-bump:
    needs: [build-dist]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
      - uses: ./.github/actions/publish
        with:
          version: ${{ inputs.version }}
          product_name: winkerberos
          garasign_username: ${{ secrets.GRS_CONFIG_USER1_USERNAME }}
          garasign_password: ${{ secrets.GRS_CONFIG_USER1_PASSWORD }}
          artifactory_username: ${{ secrets.ARTIFACTORY_USER }}
          artifactory_password: ${{ secrets.ARTIFACTORY_PASSWORD }}
          aws_role_arn: ${{ secrets.AWS_ROLE_ARN }}
          aws_bucket_name: ${{ secrets.AWS_BUCKET }}
          aws_region: ${{ vars.AWS_REGION_NAME }}
          token: ${{ github.token }}
          dry_run: ${{ inputs.dry_run }}
      - name: Set post version
        shell: bash
        run: |
          git clean -dffx
          export CURRENT_VERSION=${{ inputs.version }}
          export NEW_VERSION=${{ inputs.post_version }}
          sed -i "s/version = \"${CURRENT_VERSION}\"/version = \"${NEW_VERSION}\"/" pyproject.toml
      - uses: ./.github/actions/commit
        with:
          version: ${{ inputs.post_version }}
          garasign_username: ${{ secrets.GRS_CONFIG_USER1_USERNAME }}
          garasign_password: ${{ secrets.GRS_CONFIG_USER1_PASSWORD }}
          artifactory_username: ${{ secrets.ARTIFACTORY_USER }}
          artifactory_password: ${{ secrets.ARTIFACTORY_PASSWORD }}
          gpg_key_id: ${{ vars.GPG_KEY_ID }}
          dry_run: ${{ inputs.dry_run }}
