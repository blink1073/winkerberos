
name: Publish
description: "Asset Publish Action"
inputs:
  version:
    description: "The published version"
    required: true
  product_name:
    description: "The name of the product"
    required: true
  aws_bucket_name:
    description: "The aws bucket name for uploads"
    required: true
  token:
    description: "The GitHub access token"
    required: true
  dry_run:
    description: "Whether this is a dry run"
    required: true

runs:
  using: composite
  steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: all-dist-${{ github.run_id }}
        path: dist/
    - name: Create detached signature for dist files
      uses: ./.github/actions/gpg-sign
      with:
        filenames: dist/*
    - name: Move the signature files to a separate directory
      shell: bash
      run: |
          set -eux
          mkdir signatures
          mv dist/*.sig signatures
    - uses: mongodb-labs/drivers-github-tools/papertrail@main
      with:
          product_name: ${{ inputs.product_name }}
          release_version: ${{ inputs.version }}
          filenames: dist/*
          token: ${{ inputs.token }}
    - name: Show files
      shell: bash
      run: |
        ls -ltr signatures/*
        cat papertrail.txt
    - name: Upload signatures to s3
      shell: bash
      if: inputs.dry_run == 'false'
      run: |
        export AWS_BUCKET=$(cat $AWS_BUCKET_FILE)
        export TARGET=s3://$AWS_BUCKET/${{ inputs.product_name }}/${{ inputs.version }}
        aws s3 cp ./signatures $TARGET --recursive
        aws s3 cp papertrail.txt $TARGET
    - name: Create a draft release with release files
      shell: bash
      if: inputs.dry_run == 'false'
      env:
        GH_TOKEN: ${{ inputs.token }}
      run: |
        echo "$GITHUB_RUN_ID" > release_run_id.txt
        gh release create ${{ inputs.version }} --draft --verify-tag --title ${{ inputs.version }} --notes ""
        gh release upload ${{ inputs.version }} signatures/*.sig
        gh release upload ${{ inputs.version }} release_run_id.txt
    # https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/#publishing-the-distribution-to-pypi
    # - name: Publish distribution ðŸ“¦ to PyPI
    #   if: inputs.dry_run == 'false'
    #   uses: pypa/gh-action-pypi-publish@release/v1
